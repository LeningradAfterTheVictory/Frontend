@import url('https://fonts.googleapis.com/css2?family=Geologica:wght@400;700&display=swap');

.container {
  font-family: 'Geologica', sans-serif;
  background: linear-gradient(to bottom, #ffffff, #E9E7E1);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
  padding: 50px;
  max-width: 100%;
  margin: 0 auto;
}

.textWithImage {
  position: relative;
}

.header {
  font-family: "Geologica", sans-serif;
  font-size: 130px;
  margin-top: 50px;
  margin-left: 110px;
  position: relative;
  z-index: 10;
}

.header::after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: -160px;
  width: 1200px;
  height: 1px;
  background-color: #000;
  display: inline-block;
}



.svgImage {
  position: absolute;
  top: 62%;
  left: 725px;
  transform: translateY(-50%);
  width: 450px;
  height: auto;
  z-index: 1;
}




/* Стили для карточек объектов */
.objectsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(550px, 1fr));
  gap: 60px;
  margin-top: 50px;
  justify-items: center;
 
}

.objectCard {
  
  position: relative;
  border-radius: 40px;
  overflow: hidden;
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  max-width: 550px;
 
}

.objectCard:hover {
  transform: scale(1.10);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

/* Внутренний контейнер для свайпа */
.cardInner {
  display: flex;
  width: 100%;
  transition: transform 0.3s ease;
}

.imageWrapper,
.descriptionWrapper {
  width: 100%;
}

.imageWrapper {
  position: relative;
  cursor: pointer;
}

.cardImage {
  width: 100%;
  height: auto;
  object-fit: cover;
  aspect-ratio: 16 / 9;
}

.cardContent {
  padding: 15px;
}

.cardContent h3 {
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 10px;
}

/* Описание (появляется при свайпе на мобильных и при наведении на ПК) */
.cardDescription {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 15px;
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.5s ease, transform 0.5s ease;
  pointer-events: none;
}

.objectCard:hover .cardDescription {
  opacity: 1;
  transform: translateY(0);
}

.cardDescription p {
  margin: 0;
  font-size: 14px;
  text-align: center;
}

/* Описание для мобильной версии (свайп) */
.descriptionWrapper {
  background: #f0f0f0;
  padding: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.descriptionWrapper p {
  margin: 0;
  font-size: 14px;
  color: #333;
}

/* Стрелки для свайпа */
.arrowLeft,
.arrowRight {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: transparent;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  pointer-events: auto;
}

.arrowLeft {
  left: 10px;
}

.arrowRight {
  right: 10px;
}

/* Стили для кастомной стрелки из двух линий */
.customArrowLine1,
.customArrowLine2 {
  display: inline-block;
  width: 12px;
  height: 2px;
  background-color: #fff;
  position: absolute;
}

/* Для стрелки вправо */
.arrowRight .customArrowLine1 {
  transform: rotate(45deg);
  top: 9px;
  left: 8px;
}

.arrowRight .customArrowLine2 {
  transform: rotate(-45deg);
  top: 16px;
  left: 8px;
}

/* Для стрелки влево */
.arrowLeft .customArrowLine1 {
  transform: rotate(-45deg);
  top: 9px;
  left: 10px;
}

.arrowLeft .customArrowLine2 {
  transform: rotate(45deg);
  top: 16px;
  left: 10px;
}

/* Анимации для стрелок */
.arrowRight .customArrowLine1 {
  animation: arrowMoveRightLine1 1s infinite alternate;
}

.arrowRight .customArrowLine2 {
  animation: arrowMoveRightLine2 1s infinite alternate;
}

.arrowLeft .customArrowLine1 {
  animation: arrowMoveLeftLine1 1s infinite alternate;
}

.arrowLeft .customArrowLine2 {
  animation: arrowMoveLeftLine2 1s infinite alternate;
}

@keyframes arrowMoveRightLine1 {
  0% { transform: translateX(0) rotate(45deg); }
  100% { transform: translateX(5px) rotate(45deg); }
}

@keyframes arrowMoveRightLine2 {
  0% { transform: translateX(0) rotate(-45deg); }
  100% { transform: translateX(5px) rotate(-45deg); }
}

@keyframes arrowMoveLeftLine1 {
  0% { transform: translateX(0) rotate(-45deg); }
  100% { transform: translateX(-5px) rotate(-45deg); }
}

@keyframes arrowMoveLeftLine2 {
  0% { transform: translateX(0) rotate(45deg); }
  100% { transform: translateX(-5px) rotate(45deg); }
}

/* Медиа-запросы */

/* Для ПК */
@media (min-width: 769px) {
  .descriptionWrapper {
    display: none;
  }
  .cardInner {
    width: 100%;
  }
  .arrowLeft,
  .arrowRight {
    display: none;
  }
}

/* Для мобильных */
@media (max-width: 768px) {
  .container {
    padding: 10px;

  }

  .header {
    font-size: 8vw;
    margin-left: 40px;
    text-align: left;
    margin-top: 70px;
  }

  .header::after {
    content: "";
    position: absolute;
    bottom: -10px;
    left: -160px;
    width: 100px;
    height: 1px;
    background-color: #000;
    display: inline-block;
  }

  .svgImage {
    position: absolute;
    top: 78%;
    left: 200px;
    transform: translateY(-50%);
    width: 200px;
    height: auto;
    z-index: 1;
  }

  .categories {
    flex-wrap: wrap;
    gap: 8px;
  }

  .categoryButton {
    padding: 8px 16px;
    font-size: 14px;
  }

  .objectsGrid {
    grid-template-columns: 1fr;
    width: 100%; /* Занимает всю ширину */
    max-width: 400px; /* Максимальная ширина карточки */
    margin: 30px auto;
  }

  .cardImage {
    height: 180px;
    width: 100%;
    object-fit: cover;
  }

  .cardContent h3 {
    font-size: 16px;
  }

  .cardInner.showDescription .cardDescription {
    opacity: 1;
    transform: translateY(0);
  }

  .descriptionWrapper {
    display: none; /* Убираем отдельный контейнер для описания на мобильных */
  }

  .objectCard:hover .cardDescription {
    opacity: 0; /* Скрываем описание при наведении */
    transform: translateY(10px); /* Возвращаем в исходное положение */
  }

  /* Показываем описание только при свайпе (когда добавлен класс showDescription) */
  .cardInner.showDescription .cardDescription {
    opacity: 1;
    transform: translateY(0);
  }
}